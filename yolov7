{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "machine_shape": "hm",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU",
    "gpuClass": "premium"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/makaila12341/yolov7-custom-sth/blob/main/yolov7\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "KGDaeNTLd_1c",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b37d1c36-f336-4984-cee7-e3637d99b356"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/gdrive\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "drive.mount(\"/content/gdrive\")\n",
        "import os"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "%pwd"
      ],
      "metadata": {
        "id": "X2dRazc-KBZT",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 36
        },
        "outputId": "a21c9adb-24f8-4f85-b574-f7f40c920ed7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'/content'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "%cd gdrive/MyDrive/yolov7/"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dnvSkWU3c2So",
        "outputId": "78c0df60-9c4f-4226-ad11-a6cacc744b99"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[Errno 2] No such file or directory: 'gdrive/MyDrive/yolov7/'\n",
            "/content/gdrive/MyDrive/yolov7\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!python test.py --data data/custom_data.yaml --img 640 --batch 32  --weights runs/train/yolov7_640_val28/weights/best.pt --name yolov7_640_val "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Hgj__EV9_lN8",
        "outputId": "c09b789c-0825-4aeb-95de-1df1b11d0eea"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "python3: can't open file 'test.py': [Errno 2] No such file or directory\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from utils datasets.py"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 130
        },
        "id": "VXpxFzqTK3Sq",
        "outputId": "ae7cd7a1-ba90-4840-9087-420979b35159"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "SyntaxError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-27-98c2f44b8f2f>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    from utils datasets.py\u001b[0m\n\u001b[0m               ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!python --epochs 10 --img 640 640 "
      ],
      "metadata": {
        "id": "vEBtpgcPkxyp"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!wget https://github.com/wongKinYiu/yolov7/releases/download/v0.1/yolov7x.pt"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "f5K2nAodlCNI",
        "outputId": "5779ee60-0e24-4812-8c75-a4d68b4982a9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--2023-01-20 16:43:42--  https://github.com/wongKinYiu/yolov7/releases/download/v0.1/yolov7x.pt\n",
            "Resolving github.com (github.com)... 140.82.121.4\n",
            "Connecting to github.com (github.com)|140.82.121.4|:443... connected.\n",
            "HTTP request sent, awaiting response... 302 Found\n",
            "Location: https://objects.githubusercontent.com/github-production-release-asset-2e65be/511187726/c0e9f375-a42b-45d5-9e96-3156476cf121?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20230120%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230120T164343Z&X-Amz-Expires=300&X-Amz-Signature=2702291c84e34fdc9f4852503ebf4e916796487a7ef7f3950dd4b3c4e38d2891&X-Amz-SignedHeaders=host&actor_id=0&key_id=0&repo_id=511187726&response-content-disposition=attachment%3B%20filename%3Dyolov7x.pt&response-content-type=application%2Foctet-stream [following]\n",
            "--2023-01-20 16:43:43--  https://objects.githubusercontent.com/github-production-release-asset-2e65be/511187726/c0e9f375-a42b-45d5-9e96-3156476cf121?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20230120%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230120T164343Z&X-Amz-Expires=300&X-Amz-Signature=2702291c84e34fdc9f4852503ebf4e916796487a7ef7f3950dd4b3c4e38d2891&X-Amz-SignedHeaders=host&actor_id=0&key_id=0&repo_id=511187726&response-content-disposition=attachment%3B%20filename%3Dyolov7x.pt&response-content-type=application%2Foctet-stream\n",
            "Resolving objects.githubusercontent.com (objects.githubusercontent.com)... 185.199.110.133, 185.199.111.133, 185.199.108.133, ...\n",
            "Connecting to objects.githubusercontent.com (objects.githubusercontent.com)|185.199.110.133|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 143099649 (136M) [application/octet-stream]\n",
            "Saving to: ‘yolov7x.pt.3’\n",
            "\n",
            "yolov7x.pt.3        100%[===================>] 136.47M  6.11MB/s    in 17s     \n",
            "\n",
            "2023-01-20 16:44:06 (7.85 MB/s) - ‘yolov7x.pt.3’ saved [143099649/143099649]\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "%pip install wandb"
      ],
      "metadata": {
        "id": "tX4drlE-krOe",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b15bc66e-024b-4f94-950b-0eb6f7b1d6b1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting wandb\n",
            "  Downloading wandb-0.13.9-py2.py3-none-any.whl (2.0 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.0/2.0 MB\u001b[0m \u001b[31m25.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hCollecting docker-pycreds>=0.4.0\n",
            "  Downloading docker_pycreds-0.4.0-py2.py3-none-any.whl (9.0 kB)\n",
            "Requirement already satisfied: PyYAML in /usr/local/lib/python3.8/dist-packages (from wandb) (6.0)\n",
            "Requirement already satisfied: psutil>=5.0.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (5.4.8)\n",
            "Collecting GitPython>=1.0.0\n",
            "  Downloading GitPython-3.1.30-py3-none-any.whl (184 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m184.0/184.0 KB\u001b[0m \u001b[31m24.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: setuptools in /usr/local/lib/python3.8/dist-packages (from wandb) (57.4.0)\n",
            "Requirement already satisfied: protobuf!=4.21.0,<5,>=3.12.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (3.19.6)\n",
            "Collecting setproctitle\n",
            "  Downloading setproctitle-1.3.2-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (31 kB)\n",
            "Requirement already satisfied: typing-extensions in /usr/local/lib/python3.8/dist-packages (from wandb) (4.4.0)\n",
            "Requirement already satisfied: requests<3,>=2.0.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (2.25.1)\n",
            "Collecting pathtools\n",
            "  Downloading pathtools-0.1.2.tar.gz (11 kB)\n",
            "  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: appdirs>=1.4.3 in /usr/local/lib/python3.8/dist-packages (from wandb) (1.4.4)\n",
            "Collecting sentry-sdk>=1.0.0\n",
            "  Downloading sentry_sdk-1.13.0-py2.py3-none-any.whl (177 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m177.4/177.4 KB\u001b[0m \u001b[31m23.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: Click!=8.0.0,>=7.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (7.1.2)\n",
            "Requirement already satisfied: six>=1.4.0 in /usr/local/lib/python3.8/dist-packages (from docker-pycreds>=0.4.0->wandb) (1.15.0)\n",
            "Collecting gitdb<5,>=4.0.1\n",
            "  Downloading gitdb-4.0.10-py3-none-any.whl (62 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m62.7/62.7 KB\u001b[0m \u001b[31m8.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.8/dist-packages (from requests<3,>=2.0.0->wandb) (2022.12.7)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.8/dist-packages (from requests<3,>=2.0.0->wandb) (2.10)\n",
            "Requirement already satisfied: chardet<5,>=3.0.2 in /usr/local/lib/python3.8/dist-packages (from requests<3,>=2.0.0->wandb) (4.0.0)\n",
            "Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.8/dist-packages (from requests<3,>=2.0.0->wandb) (1.24.3)\n",
            "Collecting urllib3<1.27,>=1.21.1\n",
            "  Downloading urllib3-1.26.14-py2.py3-none-any.whl (140 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m140.6/140.6 KB\u001b[0m \u001b[31m19.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hCollecting smmap<6,>=3.0.1\n",
            "  Downloading smmap-5.0.0-py3-none-any.whl (24 kB)\n",
            "Building wheels for collected packages: pathtools\n",
            "  Building wheel for pathtools (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for pathtools: filename=pathtools-0.1.2-py3-none-any.whl size=8806 sha256=3a7113664041fff9b649aae2f608e2bb7856d0f364f10e3920e386d667aa0ec3\n",
            "  Stored in directory: /root/.cache/pip/wheels/4c/8e/7e/72fbc243e1aeecae64a96875432e70d4e92f3d2d18123be004\n",
            "Successfully built pathtools\n",
            "Installing collected packages: pathtools, urllib3, smmap, setproctitle, docker-pycreds, sentry-sdk, gitdb, GitPython, wandb\n",
            "  Attempting uninstall: urllib3\n",
            "    Found existing installation: urllib3 1.24.3\n",
            "    Uninstalling urllib3-1.24.3:\n",
            "      Successfully uninstalled urllib3-1.24.3\n",
            "Successfully installed GitPython-3.1.30 docker-pycreds-0.4.0 gitdb-4.0.10 pathtools-0.1.2 sentry-sdk-1.13.0 setproctitle-1.3.2 smmap-5.0.0 urllib3-1.26.14 wandb-0.13.9\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!python train.py --device 0 --batch-size 16 --epochs 50 --img 640 640 --data data/custom_data.yaml --hyp data/hyp.scratch.custom.yaml --cfg cfg/training/yolov7x-custom.yaml --weights yolov7x.pt --name yolov7_640_val"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "riFV8FpmmBS1",
        "outputId": "432ef3c0-2ec4-4ffe-9d48-0fdb4a156158"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "YOLOR 🚀 2023-1-5 torch 1.13.1+cu116 CUDA:0 (A100-SXM4-40GB, 40536.1875MB)\n",
            "\n",
            "Namespace(adam=False, artifact_alias='latest', batch_size=16, bbox_interval=-1, bucket='', cache_images=False, cfg='cfg/training/yolov7x-custom.yaml', data='data/custom_data.yaml', device='0', entity=None, epochs=50, evolve=False, exist_ok=False, freeze=[0], global_rank=-1, hyp='data/hyp.scratch.custom.yaml', image_weights=False, img_size=[640, 640], label_smoothing=0.0, linear_lr=False, local_rank=-1, multi_scale=False, name='yolov7_640_val', noautoanchor=False, nosave=False, notest=False, project='runs/train', quad=False, rect=False, resume=False, save_dir='runs/train/yolov7_640_val36', save_period=-1, single_cls=False, sync_bn=False, total_batch_size=16, upload_dataset=False, v5_metric=False, weights='yolov7x.pt', workers=8, world_size=1)\n",
            "\u001b[34m\u001b[1mtensorboard: \u001b[0mStart with 'tensorboard --logdir runs/train', view at http://localhost:6006/\n",
            "2023-01-22 23:59:23.265827: I tensorflow/core/util/util.cc:169] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.\n",
            "\u001b[34m\u001b[1mhyperparameters: \u001b[0mlr0=0.01, lrf=0.1, momentum=0.937, weight_decay=0.0005, warmup_epochs=3.0, warmup_momentum=0.8, warmup_bias_lr=0.1, box=0.05, cls=0.3, cls_pw=1.0, obj=0.7, obj_pw=1.0, iou_t=0.2, anchor_t=4.0, fl_gamma=0.0, hsv_h=0.015, hsv_s=0.7, hsv_v=0.4, degrees=0.0, translate=0.2, scale=0.5, shear=0.0, perspective=0.0, flipud=0.0, fliplr=0.5, mosaic=1.0, mixup=0.0, copy_paste=0.0, paste_in=0.0, loss_ota=1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: (1) Create a W&B account\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: (2) Use an existing W&B account\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: (3) Don't visualize my results\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Enter your choice: 2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: You chose 'Use an existing W&B account'\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Logging into wandb.ai. (Learn how to deploy a W&B server locally: https://wandb.me/wandb-server)\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: You can find your API key in your browser here: https://wandb.ai/authorize\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Paste an API key from your profile and hit enter, or press ctrl+c to quit: \n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Appending key for api.wandb.ai to your netrc file: /root/.netrc\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.13.9\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in \u001b[35m\u001b[1m/content/gdrive/MyDrive/yolov7/wandb/run-20230122_235950-yb79jx5k\u001b[0m\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Run \u001b[1m`wandb offline`\u001b[0m to turn off syncing.\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33myolov7_640_val36\u001b[0m\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at \u001b[34m\u001b[4mhttps://wandb.ai/science-research/YOLOR\u001b[0m\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run at \u001b[34m\u001b[4mhttps://wandb.ai/science-research/YOLOR/runs/yb79jx5k\u001b[0m\n",
            "\n",
            "                 from  n    params  module                                  arguments                     \n",
            "  0                -1  1      1160  models.common.Conv                      [3, 40, 3, 1]                 \n",
            "  1                -1  1     28960  models.common.Conv                      [40, 80, 3, 2]                \n",
            "  2                -1  1     57760  models.common.Conv                      [80, 80, 3, 1]                \n",
            "  3                -1  1    115520  models.common.Conv                      [80, 160, 3, 2]               \n",
            "  4                -1  1     10368  models.common.Conv                      [160, 64, 1, 1]               \n",
            "  5                -2  1     10368  models.common.Conv                      [160, 64, 1, 1]               \n",
            "  6                -1  1     36992  models.common.Conv                      [64, 64, 3, 1]                \n",
            "  7                -1  1     36992  models.common.Conv                      [64, 64, 3, 1]                \n",
            "  8                -1  1     36992  models.common.Conv                      [64, 64, 3, 1]                \n",
            "  9                -1  1     36992  models.common.Conv                      [64, 64, 3, 1]                \n",
            " 10                -1  1     36992  models.common.Conv                      [64, 64, 3, 1]                \n",
            " 11                -1  1     36992  models.common.Conv                      [64, 64, 3, 1]                \n",
            " 12[-1, -3, -5, -7, -8]  1         0  models.common.Concat                    [1]                           \n",
            " 13                -1  1    103040  models.common.Conv                      [320, 320, 1, 1]              \n",
            " 14                -1  1         0  models.common.MP                        []                            \n",
            " 15                -1  1     51520  models.common.Conv                      [320, 160, 1, 1]              \n",
            " 16                -3  1     51520  models.common.Conv                      [320, 160, 1, 1]              \n",
            " 17                -1  1    230720  models.common.Conv                      [160, 160, 3, 2]              \n",
            " 18          [-1, -3]  1         0  models.common.Concat                    [1]                           \n",
            " 19                -1  1     41216  models.common.Conv                      [320, 128, 1, 1]              \n",
            " 20                -2  1     41216  models.common.Conv                      [320, 128, 1, 1]              \n",
            " 21                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              \n",
            " 22                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              \n",
            " 23                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              \n",
            " 24                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              \n",
            " 25                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              \n",
            " 26                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              \n",
            " 27[-1, -3, -5, -7, -8]  1         0  models.common.Concat                    [1]                           \n",
            " 28                -1  1    410880  models.common.Conv                      [640, 640, 1, 1]              \n",
            " 29                -1  1         0  models.common.MP                        []                            \n",
            " 30                -1  1    205440  models.common.Conv                      [640, 320, 1, 1]              \n",
            " 31                -3  1    205440  models.common.Conv                      [640, 320, 1, 1]              \n",
            " 32                -1  1    922240  models.common.Conv                      [320, 320, 3, 2]              \n",
            " 33          [-1, -3]  1         0  models.common.Concat                    [1]                           \n",
            " 34                -1  1    164352  models.common.Conv                      [640, 256, 1, 1]              \n",
            " 35                -2  1    164352  models.common.Conv                      [640, 256, 1, 1]              \n",
            " 36                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            " 37                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            " 38                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            " 39                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            " 40                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            " 41                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            " 42[-1, -3, -5, -7, -8]  1         0  models.common.Concat                    [1]                           \n",
            " 43                -1  1   1640960  models.common.Conv                      [1280, 1280, 1, 1]            \n",
            " 44                -1  1         0  models.common.MP                        []                            \n",
            " 45                -1  1    820480  models.common.Conv                      [1280, 640, 1, 1]             \n",
            " 46                -3  1    820480  models.common.Conv                      [1280, 640, 1, 1]             \n",
            " 47                -1  1   3687680  models.common.Conv                      [640, 640, 3, 2]              \n",
            " 48          [-1, -3]  1         0  models.common.Concat                    [1]                           \n",
            " 49                -1  1    328192  models.common.Conv                      [1280, 256, 1, 1]             \n",
            " 50                -2  1    328192  models.common.Conv                      [1280, 256, 1, 1]             \n",
            " 51                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            " 52                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            " 53                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            " 54                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            " 55                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            " 56                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            " 57[-1, -3, -5, -7, -8]  1         0  models.common.Concat                    [1]                           \n",
            " 58                -1  1   1640960  models.common.Conv                      [1280, 1280, 1, 1]            \n",
            " 59                -1  1  11887360  models.common.SPPCSPC                   [1280, 640, 1]                \n",
            " 60                -1  1    205440  models.common.Conv                      [640, 320, 1, 1]              \n",
            " 61                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']          \n",
            " 62                43  1    410240  models.common.Conv                      [1280, 320, 1, 1]             \n",
            " 63          [-1, -2]  1         0  models.common.Concat                    [1]                           \n",
            " 64                -1  1    164352  models.common.Conv                      [640, 256, 1, 1]              \n",
            " 65                -2  1    164352  models.common.Conv                      [640, 256, 1, 1]              \n",
            " 66                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            " 67                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            " 68                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            " 69                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            " 70                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            " 71                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            " 72[-1, -3, -5, -7, -8]  1         0  models.common.Concat                    [1]                           \n",
            " 73                -1  1    410240  models.common.Conv                      [1280, 320, 1, 1]             \n",
            " 74                -1  1     51520  models.common.Conv                      [320, 160, 1, 1]              \n",
            " 75                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']          \n",
            " 76                28  1    102720  models.common.Conv                      [640, 160, 1, 1]              \n",
            " 77          [-1, -2]  1         0  models.common.Concat                    [1]                           \n",
            " 78                -1  1     41216  models.common.Conv                      [320, 128, 1, 1]              \n",
            " 79                -2  1     41216  models.common.Conv                      [320, 128, 1, 1]              \n",
            " 80                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              \n",
            " 81                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              \n",
            " 82                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              \n",
            " 83                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              \n",
            " 84                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              \n",
            " 85                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              \n",
            " 86[-1, -3, -5, -7, -8]  1         0  models.common.Concat                    [1]                           \n",
            " 87                -1  1    102720  models.common.Conv                      [640, 160, 1, 1]              \n",
            " 88                -1  1         0  models.common.MP                        []                            \n",
            " 89                -1  1     25920  models.common.Conv                      [160, 160, 1, 1]              \n",
            " 90                -3  1     25920  models.common.Conv                      [160, 160, 1, 1]              \n",
            " 91                -1  1    230720  models.common.Conv                      [160, 160, 3, 2]              \n",
            " 92      [-1, -3, 73]  1         0  models.common.Concat                    [1]                           \n",
            " 93                -1  1    164352  models.common.Conv                      [640, 256, 1, 1]              \n",
            " 94                -2  1    164352  models.common.Conv                      [640, 256, 1, 1]              \n",
            " 95                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            " 96                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            " 97                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            " 98                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            " 99                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            "100                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              \n",
            "101[-1, -3, -5, -7, -8]  1         0  models.common.Concat                    [1]                           \n",
            "102                -1  1    410240  models.common.Conv                      [1280, 320, 1, 1]             \n",
            "103                -1  1         0  models.common.MP                        []                            \n",
            "104                -1  1    103040  models.common.Conv                      [320, 320, 1, 1]              \n",
            "105                -3  1    103040  models.common.Conv                      [320, 320, 1, 1]              \n",
            "106                -1  1    922240  models.common.Conv                      [320, 320, 3, 2]              \n",
            "107      [-1, -3, 59]  1         0  models.common.Concat                    [1]                           \n",
            "108                -1  1    656384  models.common.Conv                      [1280, 512, 1, 1]             \n",
            "109                -2  1    656384  models.common.Conv                      [1280, 512, 1, 1]             \n",
            "110                -1  1   2360320  models.common.Conv                      [512, 512, 3, 1]              \n",
            "111                -1  1   2360320  models.common.Conv                      [512, 512, 3, 1]              \n",
            "112                -1  1   2360320  models.common.Conv                      [512, 512, 3, 1]              \n",
            "113                -1  1   2360320  models.common.Conv                      [512, 512, 3, 1]              \n",
            "114                -1  1   2360320  models.common.Conv                      [512, 512, 3, 1]              \n",
            "115                -1  1   2360320  models.common.Conv                      [512, 512, 3, 1]              \n",
            "116[-1, -3, -5, -7, -8]  1         0  models.common.Concat                    [1]                           \n",
            "117                -1  1   1639680  models.common.Conv                      [2560, 640, 1, 1]             \n",
            "118                87  1    461440  models.common.Conv                      [160, 320, 3, 1]              \n",
            "119               102  1   1844480  models.common.Conv                      [320, 640, 3, 1]              \n",
            "120               117  1   7375360  models.common.Conv                      [640, 1280, 3, 1]             \n",
            "121   [118, 119, 120]  1     49406  models.yolo.IDetect                     [2, [[12, 16, 19, 36, 40, 28], [36, 75, 76, 55, 72, 146], [142, 110, 192, 243, 459, 401]], [320, 640, 1280]]\n",
            "Model Summary: 467 layers, 70821830 parameters, 70821830 gradients\n",
            "\n",
            "Transferred 630/644 items from yolov7x.pt\n",
            "Scaled weight_decay = 0.0005\n",
            "Optimizer groups: 108 .bias, 108 conv.weight, 111 other\n",
            "\u001b[34m\u001b[1mtrain: \u001b[0mScanning 'data/train/labels.cache' images and labels... 280 found, 1 missing, 0 empty, 0 corrupted: 100% 281/281 [00:00<?, ?it/s]\n",
            "\u001b[34m\u001b[1mval: \u001b[0mScanning 'data/val/labels.cache' images and labels... 86 found, 0 missing, 0 empty, 0 corrupted: 100% 86/86 [00:00<?, ?it/s]\n",
            "\n",
            "\u001b[34m\u001b[1mautoanchor: \u001b[0mAnalyzing anchors... anchors/target = 6.04, Best Possible Recall (BPR) = 1.0000\n",
            "Image sizes 640 train, 640 test\n",
            "Using 8 dataloader workers\n",
            "Logging results to runs/train/yolov7_640_val36\n",
            "Starting training for 50 epochs...\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "      0/49     12.5G   0.07902   0.02484   0.02003    0.1239        79       640: 100% 18/18 [01:02<00:00,  3.45s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95:   0% 0/3 [00:00<?, ?it/s]/usr/local/lib/python3.8/dist-packages/torch/functional.py:504: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3190.)\n",
            "  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:08<00:00,  2.95s/it]\n",
            "                 all          86         307       0.161        0.12      0.0388     0.00701\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "      1/49     14.3G   0.06941   0.02417   0.01651    0.1101        41       640: 100% 18/18 [00:13<00:00,  1.31it/s]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:01<00:00,  2.56it/s]\n",
            "                 all          86         307       0.312       0.507       0.333       0.104\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "      2/49     14.3G   0.05785   0.02406   0.01281   0.09472        56       640: 100% 18/18 [00:22<00:00,  1.23s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:01<00:00,  2.95it/s]\n",
            "                 all          86         307        0.48       0.587       0.503       0.149\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "      3/49     14.3G   0.05152   0.02185   0.01056   0.08394        71       640: 100% 18/18 [00:24<00:00,  1.35s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  3.43it/s]\n",
            "                 all          86         307       0.289       0.615       0.306      0.0862\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "      4/49     14.3G   0.04761   0.01914  0.008634   0.07538        44       640: 100% 18/18 [00:24<00:00,  1.38s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:03<00:00,  1.04s/it]\n",
            "                 all          86         307       0.697       0.516         0.7       0.255\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "      5/49     14.3G   0.04689   0.01701  0.007814   0.07171        38       640: 100% 18/18 [00:23<00:00,  1.32s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  3.98it/s]\n",
            "                 all          86         307        0.75       0.781       0.797       0.338\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "      6/49     14.3G   0.04845   0.01534  0.006881   0.07067        66       640: 100% 18/18 [00:22<00:00,  1.24s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  3.98it/s]\n",
            "                 all          86         307       0.821       0.885       0.843       0.386\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "      7/49     14.3G   0.05072   0.01405  0.005355   0.07012        46       640: 100% 18/18 [00:31<00:00,  1.76s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.19it/s]\n",
            "                 all          86         307       0.877       0.891        0.89       0.388\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "      8/49     14.3G   0.04652     0.013   0.00445   0.06396        44       640: 100% 18/18 [00:19<00:00,  1.11s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.15it/s]\n",
            "                 all          86         307       0.755       0.819       0.767       0.347\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "      9/49     14.3G   0.05503   0.01204  0.004225   0.07129        46       640: 100% 18/18 [00:23<00:00,  1.33s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:02<00:00,  1.02it/s]\n",
            "                 all          86         307       0.398        0.78       0.535       0.198\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     10/49     14.3G   0.05661   0.01322  0.004681   0.07451        80       640: 100% 18/18 [00:24<00:00,  1.36s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.23it/s]\n",
            "                 all          86         307        0.57         0.5       0.528       0.243\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     11/49     14.3G   0.05006   0.01382  0.004442   0.06832        80       640: 100% 18/18 [00:27<00:00,  1.52s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.37it/s]\n",
            "                 all          86         307       0.803       0.623       0.795       0.249\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     12/49     14.3G   0.04747    0.0129  0.003966   0.06434        50       640: 100% 18/18 [00:27<00:00,  1.54s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.53it/s]\n",
            "                 all          86         307       0.585       0.854       0.689       0.174\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     13/49     14.3G   0.04437    0.0129  0.003721     0.061        78       640: 100% 18/18 [00:23<00:00,  1.32s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.49it/s]\n",
            "                 all          86         307       0.871        0.86       0.912       0.387\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     14/49     14.3G    0.0474    0.0151  0.003687   0.06618        61       640: 100% 18/18 [00:23<00:00,  1.32s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:02<00:00,  1.06it/s]\n",
            "                 all          86         307        0.93       0.791       0.896       0.364\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     15/49     14.3G   0.04567   0.01449  0.003537    0.0637        61       640: 100% 18/18 [00:25<00:00,  1.44s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.48it/s]\n",
            "                 all          86         307       0.991        0.78       0.917       0.434\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     16/49     14.3G   0.04331   0.01411  0.003222   0.06064        47       640: 100% 18/18 [00:26<00:00,  1.48s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.51it/s]\n",
            "                 all          86         307       0.906       0.882       0.945       0.522\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     17/49     14.3G   0.03898    0.0152  0.003174   0.05735        73       640: 100% 18/18 [00:22<00:00,  1.27s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.46it/s]\n",
            "                 all          86         307       0.775       0.933        0.87       0.538\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     18/49     14.3G   0.03913   0.01344  0.003235    0.0558       102       640: 100% 18/18 [00:27<00:00,  1.52s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.57it/s]\n",
            "                 all          86         307       0.929       0.934       0.975       0.569\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     19/49     14.3G   0.03711   0.01355  0.002847   0.05351        45       640: 100% 18/18 [00:22<00:00,  1.23s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:02<00:00,  1.02it/s]\n",
            "                 all          86         307       0.799       0.932       0.906       0.386\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     20/49     14.3G    0.0378   0.01253   0.00277    0.0531        60       640: 100% 18/18 [00:23<00:00,  1.29s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.68it/s]\n",
            "                 all          86         307       0.746       0.832       0.795       0.562\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     21/49     14.3G   0.03696   0.01378  0.003274   0.05401        39       640: 100% 18/18 [00:26<00:00,  1.45s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.60it/s]\n",
            "                 all          86         307       0.988       0.825       0.936       0.619\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     22/49     14.3G   0.03284   0.01256  0.002702    0.0481        43       640: 100% 18/18 [00:31<00:00,  1.76s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.60it/s]\n",
            "                 all          86         307       0.945       0.951       0.973        0.67\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     23/49     14.3G   0.03196   0.01123  0.002298   0.04549        28       640: 100% 18/18 [00:22<00:00,  1.25s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.57it/s]\n",
            "                 all          86         307       0.947       0.927       0.983       0.763\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     24/49     14.3G   0.02901   0.01085  0.002161   0.04201        55       640: 100% 18/18 [00:21<00:00,  1.21s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:02<00:00,  1.07it/s]\n",
            "                 all          86         307       0.984        0.92       0.979       0.676\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     25/49     14.3G   0.02704   0.01021  0.001921   0.03916        70       640: 100% 18/18 [00:19<00:00,  1.09s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.46it/s]\n",
            "                 all          86         307       0.981       0.971        0.99       0.726\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     26/49     14.3G    0.0265  0.009957  0.001634   0.03809        34       640: 100% 18/18 [00:33<00:00,  1.85s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.54it/s]\n",
            "                 all          86         307       0.998       0.939        0.99       0.717\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     27/49     14.3G   0.02397  0.009866  0.001599   0.03544        76       640: 100% 18/18 [00:24<00:00,  1.36s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.51it/s]\n",
            "                 all          86         307       0.982       0.971        0.99       0.832\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     28/49     14.3G   0.03015  0.009666  0.001564   0.04138        56       640: 100% 18/18 [00:24<00:00,  1.37s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.56it/s]\n",
            "                 all          86         307       0.981        0.95       0.989       0.724\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     29/49     14.3G   0.02788  0.009721  0.001821   0.03942        62       640: 100% 18/18 [00:24<00:00,  1.34s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:02<00:00,  1.11it/s]\n",
            "                 all          86         307           1       0.929       0.981       0.735\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     30/49     14.3G   0.02805   0.01047  0.001564   0.04008        75       640: 100% 18/18 [00:21<00:00,  1.17s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.45it/s]\n",
            "                 all          86         307       0.962       0.971       0.989       0.636\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     31/49     14.3G   0.02787   0.01024  0.001599   0.03971        42       640: 100% 18/18 [00:35<00:00,  1.97s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.85it/s]\n",
            "                 all          86         307       0.979       0.977        0.99       0.796\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     32/49     14.3G   0.02506  0.009429  0.001528   0.03601        60       640: 100% 18/18 [00:21<00:00,  1.17s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.61it/s]\n",
            "                 all          86         307       0.978       0.948       0.977       0.768\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     33/49     14.3G   0.02292  0.009119  0.001729   0.03377        36       640: 100% 18/18 [00:28<00:00,  1.57s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.58it/s]\n",
            "                 all          86         307       0.978       0.955       0.979       0.693\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     34/49     14.3G   0.02424  0.008892  0.001433   0.03457        55       640: 100% 18/18 [00:23<00:00,  1.31s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:02<00:00,  1.17it/s]\n",
            "                 all          86         307       0.917       0.962       0.974       0.689\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     35/49     14.3G    0.0264  0.009081  0.001327   0.03681        56       640: 100% 18/18 [00:30<00:00,  1.70s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.63it/s]\n",
            "                 all          86         307        0.98       0.979       0.991       0.785\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     36/49     14.3G   0.02283  0.008732  0.001345   0.03291        65       640: 100% 18/18 [00:24<00:00,  1.34s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.60it/s]\n",
            "                 all          86         307       0.983       0.971       0.992       0.758\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     37/49     14.3G   0.02129  0.009045  0.001263    0.0316        57       640: 100% 18/18 [00:21<00:00,  1.20s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.56it/s]\n",
            "                 all          86         307       0.977       0.983       0.992       0.779\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     38/49     14.3G   0.02142  0.008643  0.001175   0.03124        65       640: 100% 18/18 [00:23<00:00,  1.30s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.58it/s]\n",
            "                 all          86         307       0.976       0.987        0.99       0.834\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     39/49     14.3G   0.02124  0.008166  0.001193    0.0306        46       640: 100% 18/18 [00:34<00:00,  1.91s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:02<00:00,  1.29it/s]\n",
            "                 all          86         307       0.974       0.994       0.991       0.719\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     40/49     14.3G   0.01952  0.008501  0.001154   0.02917        48       640: 100% 18/18 [00:22<00:00,  1.27s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.57it/s]\n",
            "                 all          86         307       0.981       0.983       0.978       0.816\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     41/49     14.3G   0.01799  0.008202  0.001145   0.02734        58       640: 100% 18/18 [00:24<00:00,  1.37s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.62it/s]\n",
            "                 all          86         307       0.979       0.986       0.985        0.85\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     42/49     14.3G   0.01776  0.008177 0.0009685    0.0269        73       640: 100% 18/18 [00:25<00:00,  1.39s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.55it/s]\n",
            "                 all          86         307       0.979       0.986       0.988       0.862\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     43/49     14.3G   0.01667  0.008372 0.0008879   0.02593        66       640: 100% 18/18 [00:30<00:00,  1.71s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.86it/s]\n",
            "                 all          86         307       0.979       0.987       0.989       0.868\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     44/49     14.3G   0.01549  0.007653 0.0008231   0.02396        75       640: 100% 18/18 [00:23<00:00,  1.29s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:02<00:00,  1.20it/s]\n",
            "                 all          86         307       0.979       0.989       0.991       0.869\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     45/49     14.3G   0.01491  0.007413 0.0007963   0.02312        46       640: 100% 18/18 [00:19<00:00,  1.11s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.66it/s]\n",
            "                 all          86         307       0.979       0.983       0.991       0.866\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     46/49     14.3G   0.01602  0.007326 0.0007044   0.02405        58       640: 100% 18/18 [00:21<00:00,  1.22s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.64it/s]\n",
            "                 all          86         307       0.981       0.983       0.992       0.821\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     47/49     14.3G   0.01651   0.00725 0.0008185   0.02458        57       640: 100% 18/18 [00:29<00:00,  1.62s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.66it/s]\n",
            "                 all          86         307       0.981       0.987        0.99       0.841\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     48/49     14.3G   0.01723  0.006958 0.0008598   0.02505        62       640: 100% 18/18 [00:22<00:00,  1.23s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:00<00:00,  4.67it/s]\n",
            "                 all          86         307       0.981       0.987        0.99       0.862\n",
            "\n",
            "     Epoch   gpu_mem       box       obj       cls     total    labels  img_size\n",
            "     49/49     14.3G   0.01449  0.006594 0.0008461   0.02193        43       640: 100% 18/18 [00:22<00:00,  1.25s/it]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:03<00:00,  1.11s/it]\n",
            "                 all          86         307        0.98       0.987       0.991        0.88\n",
            "Sea Turtle Hatchling          86         180       0.991       0.989       0.992       0.877\n",
            "          Ghost Crab          86         127       0.969       0.984        0.99       0.883\n",
            "50 epochs completed in 0.440 hours.\n",
            "\n",
            "Optimizer stripped from runs/train/yolov7_640_val36/weights/last.pt, 142.1MB\n",
            "Optimizer stripped from runs/train/yolov7_640_val36/weights/best.pt, 142.1MB\n",
            "Images sizes do not match. This will causes images to be display incorrectly in the UI.\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish... \u001b[32m(success).\u001b[0m\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:      metrics/mAP_0.5 ▁▃▄▃▇▇▇▆▅▇▆▇▇█▇█▇███████████████████████\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: metrics/mAP_0.5:0.95 ▁▂▂▂▄▄▄▄▃▃▂▄▄▅▅▆▅▆▆▇▇▇█▇▆▇▇▇▇▇▇█▇███████\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:    metrics/precision ▁▂▄▂▆▇▇▆▄▆▅▇█▇▆▇▆███████████████████████\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:       metrics/recall ▁▄▅▅▆▇▇▇▄▅▇▇▆▇██▇▇██████████████████████\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:       train/box_loss █▇▆▅▅▅▅▄▆▅▅▄▄▄▄▄▄▃▃▃▂▂▂▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:       train/cls_loss █▇▅▅▄▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:       train/obj_loss ███▇▅▄▄▃▄▄▃▃▄▄▄▄▃▄▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:         val/box_loss █▇▆▅▄▄▃▄▄▄▄▄▄▃▃▃▄▂▂▂▂▂▁▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:         val/cls_loss █▇▆▅▄▃▃▃▂▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:         val/obj_loss ▅▆█▇▅▄▅▄▃▃▃▃▃▄▂▂▂▃▂▂▁▂▁▂▁▁▁▁▂▂▂▂▂▁▂▂▁▁▂▂\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:                x/lr0 ▁▂▂▃▄▄▄▅▆▆▆▇▇▇█████████▇▇▇▇▆▆▆▅▅▄▄▄▄▃▃▃▃\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:                x/lr1 ▁▂▂▃▄▄▄▅▆▆▆▇▇▇█████████▇▇▇▇▆▆▆▅▅▄▄▄▄▃▃▃▃\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:                x/lr2 ████▇▇▇▇▇▇▆▆▆▆▆▆▅▅▅▅▅▄▄▄▄▄▄▃▃▃▃▃▂▂▂▂▂▁▁▁\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:      metrics/mAP_0.5 0.99071\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: metrics/mAP_0.5:0.95 0.87989\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:    metrics/precision 0.97987\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:       metrics/recall 0.98657\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:       train/box_loss 0.01449\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:       train/cls_loss 0.00085\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:       train/obj_loss 0.00659\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:         val/box_loss 0.0371\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:         val/cls_loss 0.00483\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:         val/obj_loss 0.02176\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:                x/lr0 0.00091\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:                x/lr1 0.00091\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m:                x/lr2 0.01101\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run \u001b[33myolov7_640_val36\u001b[0m at: \u001b[34m\u001b[4mhttps://wandb.ai/science-research/YOLOR/runs/yb79jx5k\u001b[0m\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 342 media file(s), 1 artifact file(s) and 0 other file(s)\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Find logs at: \u001b[35m\u001b[1m./wandb/run-20230122_235950-yb79jx5k/logs\u001b[0m\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "KrXK-hs0YrLI"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!python test.py --data data/custom_data.yaml --img 640 --batch 32  --weights runs/train/yolov7_640_val36/weights/best.pt --name yolov7_640_val"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LL6z07eiE2fy",
        "outputId": "672743be-1e5c-4714-f6fb-759e398f11a4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Namespace(augment=False, batch_size=32, conf_thres=0.001, data='data/custom_data.yaml', device='', exist_ok=False, img_size=640, iou_thres=0.65, name='yolov7_640_val', no_trace=False, project='runs/test', save_conf=False, save_hybrid=False, save_json=False, save_txt=False, single_cls=False, task='val', v5_metric=False, verbose=False, weights=['runs/train/yolov7_640_val36/weights/best.pt'])\n",
            "YOLOR 🚀 2023-1-5 torch 1.13.1+cu116 CUDA:0 (A100-SXM4-40GB, 40536.1875MB)\n",
            "\n",
            "Fusing layers... \n",
            "IDetect.fuse\n",
            "Model Summary: 362 layers, 70789182 parameters, 0 gradients\n",
            " Convert model to Traced-model... \n",
            " traced_script_module saved! \n",
            " model is traced! \n",
            "\n",
            "/usr/local/lib/python3.8/dist-packages/torch/functional.py:504: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3190.)\n",
            "  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]\n",
            "\u001b[34m\u001b[1mval: \u001b[0mScanning 'data/val/labels.cache' images and labels... 86 found, 0 missing, 0 empty, 0 corrupted: 100% 86/86 [00:00<?, ?it/s]\n",
            "               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100% 3/3 [00:08<00:00,  2.68s/it]\n",
            "                 all          86         307        0.98       0.987        0.99       0.879\n",
            "Sea Turtle Hatchling          86         180       0.991       0.989       0.991       0.875\n",
            "          Ghost Crab          86         127       0.969       0.984       0.989       0.882\n",
            "Speed: 3.8/1.1/4.9 ms inference/NMS/total per 640x640 image at batch-size 32\n",
            "Results saved to runs/test/yolov7_640_val10\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PxCxzT_8VLQ5",
        "outputId": "7d507cf7-707e-4e7d-fbc9-9c5c8321cbfe"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Namespace(agnostic_nms=False, augment=False, classes=None, conf_thres=0.25, device='', exist_ok=False, img_size=640, iou_thres=0.45, name='exp', no_trace=False, nosave=False, project='runs/detect', save_conf=False, save_txt=False, source='0', update=False, view_img=False, weights='yolov7.pt')\n",
            "YOLOR 🚀 2023-1-5 torch 1.13.1+cu116 CUDA:0 (A100-SXM4-40GB, 40536.1875MB)\n",
            "\n",
            "error: refs/tags/v0.1 does not point to a valid object!\n",
            "Traceback (most recent call last):\n",
            "  File \"/content/gdrive/MyDrive/yolov7/utils/google_utils.py\", line 26, in attempt_download\n",
            "    assets = [x['name'] for x in response['assets']]  # release assets\n",
            "KeyError: 'assets'\n",
            "\n",
            "During handling of the above exception, another exception occurred:\n",
            "\n",
            "Traceback (most recent call last):\n",
            "  File \"detect.py\", line 215, in <module>\n",
            "    detect()\n",
            "  File \"detect.py\", line 45, in detect\n",
            "    model = attempt_load(weights, map_location=device)  # load FP32 model\n",
            "  File \"/content/gdrive/MyDrive/yolov7/models/experimental.py\", line 251, in attempt_load\n",
            "    attempt_download(w)\n",
            "  File \"/content/gdrive/MyDrive/yolov7/utils/google_utils.py\", line 31, in attempt_download\n",
            "    tag = subprocess.check_output('git tag', shell=True).decode().split()[-1]\n",
            "IndexError: list index out of range\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!python detect.py --weights runs/train/yolov7_640_val36/weights/best.pt  --img-size 640 --save-txt  --source data/Fair/Test.jpeg\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fjBBJnmwGI-8",
        "outputId": "b2f17297-f891-412e-83ba-f9582340a929"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Namespace(agnostic_nms=False, augment=False, classes=None, conf_thres=0.25, device='', exist_ok=False, img_size=640, iou_thres=0.45, name='exp', no_trace=False, nosave=False, project='runs/detect', save_conf=False, save_txt=True, source='data/Fair/Test.jpeg', update=False, view_img=False, weights=['runs/train/yolov7_640_val36/weights/best.pt'])\n",
            "YOLOR 🚀 2023-2-2 torch 1.13.1+cu116 CUDA:0 (Tesla T4, 15109.875MB)\n",
            "\n",
            "Fusing layers... \n",
            "IDetect.fuse\n",
            "Model Summary: 362 layers, 70789182 parameters, 0 gradients\n",
            " Convert model to Traced-model... \n",
            " traced_script_module saved! \n",
            " model is traced! \n",
            "\n",
            "/usr/local/lib/python3.8/dist-packages/torch/functional.py:504: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3190.)\n",
            "  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]\n",
            "10 Sea Turtle Hatchlings, Done. (30.0ms) Inference, (1.4ms) NMS\n",
            " The image with the result is saved in: runs/detect/exp84/Test.jpeg\n",
            "Done. (0.678s)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "runs/train/yolov7x-custom9/weights/last.pt --return --save-txt"
      ],
      "metadata": {
        "id": "lFTmGAuBGsnG"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import cv2\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "label = [0.516391, 0.501225, 0.0554534, 0.0661765]\n",
        "img = cv2.imread('15.JPG')\n",
        "\n",
        "H, W, _ = img.shape\n",
        "#object = [int(label[0]*W/2), int(label[1]*H/2), int(label[2]*W), int(label[3]*H)]\n",
        "object = [int(label[0]*W), int(label[1]*H), int(label[2]*W), int(label[3]*H)]\n",
        "x,y,w,h = object\n",
        "plt.subplot(1,2,1)\n",
        "plt.imshow(img)\n",
        "plt.subplot(1,2,2)\n",
        "#plt.imshow(img[y:y+h, x:x+w])\n",
        "plt.imshow(img[y-h//2:y+h//2, x-w//2:x+w//2])\n",
        "plt.show()\n",
        "\n",
        "print (H,W,w,h)\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "qyZ3oIf85oo5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 205
        },
        "outputId": "6ebf2fd3-9f78-47be-a2db-33a108ee52e5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2448 3264 180 162\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "mvu8AdIPjbCz"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}